definitions:
  model.UpdateScoreVideo:
    properties:
      comments:
        type: integer
      likes:
        type: integer
      shares:
        type: integer
      views:
        type: integer
      watch_time:
        type: integer
    type: object
  model.Video:
    properties:
      category_id:
        type: string
      comments:
        type: integer
      created_at:
        type: string
      creator_id:
        type: string
      id:
        type: string
      length:
        type: integer
      likes:
        type: integer
      score:
        type: number
      shares:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      updater_id:
        type: string
      views:
        type: integer
      watch_time:
        type: integer
    type: object
info:
  contact: {}
paths:
  /internal/migrate-public:
    post:
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      - Access Token: []
      - Entity Key: []
      - User ID: []
      summary: Database migration
      tags:
      - internal
  /score/update:
    put:
      consumes:
      - application/json
      parameters:
      - description: VideoID
        in: header
        name: x-video-id
        required: true
        type: string
      - description: EntityID
        in: header
        name: x-entity-id
        required: true
        type: string
      - description: UpdateScoreVideo
        in: body
        name: update_score
        required: true
        schema:
          $ref: '#/definitions/model.UpdateScoreVideo'
      produces:
      - application/json
      responses:
        "200":
          description: Update video ranking success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Update Video Score
      tags:
      - Video Ranking
  /video-global:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Video'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get Top Global Videos
      tags:
      - Video Ranking
  /video-personalized/{entity_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: EntityID
        in: path
        name: entity_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Video'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get Personalized Top Videos
      tags:
      - Video Ranking
securityDefinitions:
  Authorization:
    in: header
    name: Authorization
    type: apiKey
  EntityID:
    in: header
    name: x-entity-id
    type: apiKey
  VideoID:
    in: header
    name: x-video-id
    type: apiKey
swagger: "2.0"
